apiVersion: v1
kind: Service
metadata:
  name: metis-studio-service
spec:
  type: LoadBalancer
  selector:
    app: metis-studio
  ports:
    - name: jupyterlab
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: codeserver
      protocol: TCP
      port: 8081
      targetPort: 8081
    - name: filebrowser
      protocol: TCP
      port: 8082
      targetPort: 8082
    - name: ungit
      protocol: TCP
      port: 8083
      targetPort: 8083
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: metis-studio
  labels:
    app: metis-studio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metis-studio
  serviceName: metis-studio-service
  template:
    metadata:
      labels:
        app: metis-studio
    spec:
      hostAliases:
      - ip: ${registry_private_ip}
        hostnames:
        - "registry"
        - "registry.${domain}"
      serviceAccountName: ${username}-user
      containers:
        - name: metis-studio
          image: ${image_tag}
          volumeMounts:
          - mountPath: "/shared"
            name: shared-data
          securityContext:
            privileged: true
          env:
            - name: USERNAME
              value: ${username}
            - name: USERFULLNAME
              value: "${firstname} ${lastname}"
            - name: USEREMAIL
              value: ${email}
            - name: SERVICE_URL
              value: https://open-vsx.org/vscode/gallery
            - name: ITEM_URL
              value: https://open-vsx.org/vscode/item
            - name: JAVA_HOME
              value: /usr/lib/jvm/default-java
          ports:
            - name: jupyterlab
              containerPort: 8080
            - name: codeserver
              containerPort: 8081
            - name: filebrowser
              containerPort: 8888
            - name: ungit 
              containerPort: 9000
          resources:
            limits:
              cpu: "16"
              memory: 64Gi
            requests:
              cpu: "2"
              memory: 4Gi
  volumeClaimTemplates:
    - metadata:
        name: shared-data
      spec:
        accessModes: [ "ReadWriteMany" ]
        storageClassName: ${storage_class_name}
        resources:
          requests:
            storage: ${size}Gi
