image:
  registry: "gethue"
  tag: "metis"
  pullPolicy: "IfNotPresent"
hue:
  replicas: 1
  database:
    create: true
    engine: "postgresql_psycopg2"
    host: "hue-postgres"
    port: 5432
    user: "hue"
    password: "hue"
    name: "hue"
  balancer:
    create: true
  interpreters: |
    [[[postgresql]]]
      name = postgresql
      interface=sqlalchemy
      options='{"url": "postgresql://hue:hue@hue-postgres:5432/hue"}'
  ini: |
    [desktop]
    use_x_forwarded_host=true
    secure_proxy_ssl_header=true

    django_debug_mode=true
    http_500_debug_mode=true
    instrumentation=true
    database_logging=false
    send_dbug_messages=false
    audit_event_log_dir=/var/log/hue/audit.log
    audit_log_max_file_size=100MB
    enable_django_debug_tool=false

    app_blacklist=filebrowser,search,hbase,security,jobbrowser,oozie
    [[auth]]
    backend=desktop.auth.backend.OIDCBackend
    behind_reverse_proxy=true
    reverse_proxy_header=HTTP_X_FORWARDED_FOR

    [[oidc]]
    oidc_rp_client_id=${oidc_client_id}
    oidc_rp_client_secret=${oidc_client_secret}
    oidc_op_authorization_endpoint=${keycloak_external_url}/realms/${realm}/protocol/openid-connect/auth
    oidc_op_token_endpoint=${keycloak_external_url}/realms/${realm}/protocol/openid-connect/token
    oidc_op_user_endpoint=${keycloak_external_url}/realms/${realm}/protocol/openid-connect/userinfo
    oidc_op_jwks_endpoint=${keycloak_external_url}/realms/${realm}/protocol/openid-connect/certs
    logout_redirect_url=${keycloak_external_url}/realms/${realm}/protocol/openid-connect/logout
    oidc_verify_ssl=false
    login_redirect_url=${hue_external_url}/oidc/callback/
    oidc_authentication_callback=${hue_external_url}/oidc/callback/
    login_redirect_url_failure=${hue_external_url}/hue/oidc_failed/
    create_users_on_login=true
    oidc_username_attribute=preferred_username

balancer:
  enabled: true
api:
  enabled: false
  domain: "${domain}"
workers:
  enabled: false
  replicas: 1
scheduler:
  enabled: false
websocket:
  enabled: false
  replicas: 1
monitoring:
  enabled: false
alerting:
  enabled: false
tracing:
  enabled: false
cron:
  enabled: false
  emailStats: "0 13 * * WED,SUN"
ingress:
  create: true
  hasAuth: false
  type: "nginx"
  # type: "nginx-ssl"
  # type: "nginx-ssl-staging"
  # type: "traefik"
  domain: "${domain}"
  email: "team@gethue.com"

