version: '3'

services:

  kong-database:
    image: postgres:11-alpine
    # container_name: kong-database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    networks:
      - admin-net
    volumes:
      - "db-data-kong-postgres:/var/lib/postgresql/data"

  kong-migrations:
    image: kong:2.3.2
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    restart: on-failure
    networks:
      - admin-net
    depends_on:
      - kong-database

  kong:
    build:
      context: ./kong/docker
    image: kong-oidc:2.3.2
    container_name: kong
    hostname: kong
    extra_hosts:
      - ${DOMAIN}:172.17.0.1
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_NGINX_PROXY_SET=$$session_secret secret # needed by kong_oidc
      - KONG_PLUGINS=bundled,oidc
    restart: on-failure
    ports:
      - 80:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
    # volumes:
    #   - ${PWD}/kong/openidc.lua:/usr/local/share/lua/5.1/resty/openidc.lua
    networks:
      - admin-net
    depends_on:
      - kong-migrations


  keycloak-db:
    image: postgres:11-alpine
    volumes: 
      - keycloak-datastore:/var/lib/postgresql/data

    ports:
      - "25432:5432"
    environment:
      POSTGRES_DB:       keycloak
      POSTGRES_USER:     keycloak
      POSTGRES_PASSWORD: password
    networks:
        - admin-net

  keycloak:
    image: jboss/keycloak:10.0.2
    hostname: keycloak
    container_name: keycloak
    extra_hosts:
      - ${DOMAIN}:172.17.0.1
    depends_on:
      - keycloak-db

    ports:
      - "8080:8080"
        #   - "8443:8443"
    environment:
      DB_VENDOR:   POSTGRES
      DB_ADDR:     keycloak-db
      DB_PORT:     5432
      DB_DATABASE: keycloak
      DB_USER:     keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER:     admin
      KEYCLOAK_PASSWORD: ${METIS_ADMIN_PASSWORD}
      DOMAIN: ${DOMAIN}
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_FRONTEND_URL: https://${DOMAIN}/keycloak/auth

    volumes:
      - ${PWD}/keycloak/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml
      - ${PWD}/keycloak/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml
      - ${PWD}/keycloak/kc.pkcs12:/opt/jboss/keycloak/standalone/configuration/keystores/kc.pkcs12
    networks:
        - admin-net

  konga:
    image: pantsel/konga:0.14.9
    ports:
      - 1337:1337
    container_name: konga
    hostname: konga
    extra_hosts:
      - ${DOMAIN}:172.17.0.1
    environment:
      - NODE_ENV=production
      - NO_AUTH=true
      - KONGA_SEED_KONG_NODE_DATA_SOURCE_FILE=/seed/kong.data
    volumes:
      - ${PWD}/konga/seed.data:/seed/kong.data
    depends_on: 
      - kong
    networks:
      - admin-net

  portainer:
    image: portainer/portainer-ce:2.1.1
    container_name: portainer
    hostname: portainer
    command: "--admin-password='${ENC_METIS_ADMIN_PASSWORD}'"
    # environment:
    #   - KUBERNETES_SERVICE_HOST=localhost
    #   - KUBERNETES_SERVICE_PORT=6443
    network_mode: host
    # networks:
    #   - hostnet
    #   - admin-net

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  gitlab:
    image: gitlab/gitlab-ce:13.12.4-ce.0
    container_name: gitlab
    hostname: gitlab
    extra_hosts:
      - ${DOMAIN}:172.17.0.1
    environment:
      METIS_ADMIN_PASSWORD: ${METIS_ADMIN_PASSWORD}
      SSL_CERT_DIR: /etc/gitlab/trusted-certs # Ruby trusted certificates (omniauth)
    ports:
      - 10080:80
      - 10443:443
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
      - ${PWD}/gitlab/gitlab.rb:/etc/gitlab/gitlab.rb
      - ${PWD}/gitlab/CA.crt:/etc/gitlab/trusted-certs/CA.crt # gitlab SSL certificate (ingress)
      - ${PWD}/gitlab/ssl:/etc/gitlab/ssl
      - ${PWD}/gitlab/CA.crt:/usr/local/share/ca-certificates/CA.crt # openssl trusted certificates (components)
    networks:
      - admin-net
  registry:
    image: registry:2.7.1
    container_name: registry
    hostname: registry
    extra_hosts:
      - ${DOMAIN}:172.17.0.1
    ports:
      - ${PRIVATE_IP}:4443:443
    environment:
      REGISTRY_HTTP_ADDR: 0.0.0.0:443
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/server.pem
      REGISTRY_HTTP_TLS_KEY: /certs/server.key
      REGISTRY_HTTP_SECRET: "a secret"
    volumes:
      - registry_data:/var/lib/registry
      - ${METIS_HOME}/pki:/certs
    networks:
      - admin-net

      # -v "$(pwd)"/certs:/certs \
      # -e REGISTRY_HTTP_ADDR=0.0.0.0:443 \
      # -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
      # -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \

  
volumes:
  db-data-kong-postgres:
  portainer_data:
  minio_data:
  keycloak-datastore:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  registry_data:

networks:
  admin-net:
    external: false
