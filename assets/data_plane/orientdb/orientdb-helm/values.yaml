# Kubernetes namespace to deploy OrientDB cluster
namespace: orientdb

statefulSetName: orientdb
podAnnotations: {}
serviceName: orientdb
labelValue: orientdb
# number of servers in the cluster
servers: 3

# If provided, the custom labels (in addition to app: {{ .Values.labelValue }}) are also
# added to all the objects created by the helm chart and also used in the selector labels.
customLabels: {}
#  environment: test
#  booleanLabel: '"true"'

httpPort: 2480
httpNodePort: 30080
httpsPort: 2443
httpsNodePort: 30443
binaryPort: 2424
binaryNodePort: 30024
binarySslPort: 2423
binarySslNodePort: 30023

createRootUser: true
rootPassword: root

orientdbConfigMapName: orientdb-configmap
configMapAnnotations: {}

# Resource limit/request applied to OrientDB pods
resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

environmentVariables: []
#- name: ORIENTDB_OPTS_MEMORY
#  value: "-Xms4G -Xmx4G"

nodeSelector: {}

tolerations: []

tryAvoidingColocation: false

podSecurityContext: {}
#  fsGroup: 2000

# Applies only to the container running OrientDB
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

# Log levels: SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST
log:
  rootLevel: INFO
  # Used for com.orientechnologies.*
  orientLevel: INFO
  # Used for com.orientechnologies.orient.server.distributed.*
  orientDistributedLevel: INFO
  customLogPropertiesFile:

image:
  repository: orientdb
  tag: 3.1.3
  pullPolicy: IfNotPresent

imagePullSecrets: []

customSqlFunctions:
  enabled: true

automaticBackup:
  enabled: false
  mode: FULL_BACKUP
  delay: 4h
  customBackupConfigFile:

serverSideScript:
  enabled: true
  allowedLanguages:
    - SQL

ssl:
  enable: false
  secretName: orientdb-server-ssl
  secretAnnotations: {}
  keyStoreFile:
  trustStoreFile:
  # Path to store keyStore in the pod
  # must not be under config since config is mounted from a configmap
  keyStore: cert/orientdb.ks
  keyStorePassword: ks-password
  clientAuth: false
  trustStore: cert/orientdb.ts
  trustStorePassword: ts-password

# security module
security:
  customSecurityConfigFile:
  enabled: true
  createDefaultUsers: true
  auditing:
    enabled: false

hazelcast:
  network:
    port: 2434
  group:
    name: orientdb
    password: orientdb
  properties:
    phoneHomeEnabled: false
    mancenterEnabled: false
    memcacheEnabled: false
    restEnabled: false
    waitSecondsBeforeJoin: 5
    operationThreadCount: 1
    ioThreadCount: 1
    operationGenericThreadCount: 1
    clientEventThreadCount: 1
    eventThreadCount: 1
    heartbeatIntervalSeconds: 5
    maxNoHeartbeatSeconds: 30
    mergeNextRunDelaySeconds: 15
  discovery:
    podLabel:
      name: orientdb-cluster-member
      value: true

distributedDB:
  defaultConfig:
    autoDeploy: true
    readQuorum: 1
    writeQuorum: majority
    readYourWrites: true
    newNodeStrategy: dynamic

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use or create.
  name: hazelcast-k8s
  annotations: {}

volumeClaims:
  databases:
    storageClass: ""
    size: 2Gi
  backup:
    mount: false
    storageClass: ""
    size: 2Gi
  config:
    storageClass: ""
    size: 100Mi
  annotations: {}

service:
  create: true
  type: LoadBalancer
  annotations: {}

